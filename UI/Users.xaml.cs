using Controller;
using EFModels;
using EFModels.MainDB;
using System;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace UI
{
    /// <summary>
    /// Логика взаимодействия для Users.xaml
    /// </summary>
    public partial class Users : Window
    {
        private AccessDTOs access;
        private UsersControl UsersControl = new UsersControl();
        public Users()
        {
            InitializeComponent();

            
            UserDTOs _tasks = (UserDTOs)this.Resources["tasks"];
            access = (AccessDTOs)this.Resources["access"];
            _tasks = UsersControl.GetUsers(_tasks);
        }

        private void dataGrid1_AutoGeneratedColumns(object sender, EventArgs e)
        {
            //dataGrid1.Columns[0].Visibility = Visibility.Collapsed;
            //dataGrid1.Columns[1].Visibility = Visibility.Collapsed;
            dataGrid1.ColumnWidth = DataGridLength.SizeToCells;
            //dataGrid1.SelectedItem = dataGrid1.Items[0];
        }

        private void dataGrid1_AutoGeneratingColumn(object sender, System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs e)
        {
            e.Column.Width = new DataGridLength(1, DataGridLengthUnitType.Auto);
        }

        private void dataGrid1_CurrentCellChanged(object sender, EventArgs e)
        {
            if (dataGrid1.SelectedItem != null)
            {
                var selectedItem = dataGrid1.SelectedItem as UserDTO;        
                access = UsersControl.GetAccesses(access, selectedItem);
            }
        }

        private void dataGrid2_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dataGrid2.Columns[0].Visibility = Visibility.Collapsed;
            dataGrid2.Columns[1].Visibility = Visibility.Collapsed;
            dataGrid2.ColumnWidth = DataGridLength.SizeToCells;
            dataGrid2.Columns[2].IsReadOnly = true;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            var selectedItem = dataGrid1.SelectedItem as UserDTO;
            access = UsersControl.GetAccesses(access, selectedItem);
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            MessageBoxResult result = MessageBox.Show("Вы действительно хотите сохранить изменения?", "Сохранить изменения", MessageBoxButton.YesNo,MessageBoxImage.Question);
            if (result == MessageBoxResult.Yes)
            {
                using (MainDBContext mainDB = new MainDBContext())
                {
                    ///
                    AccessMatrix accessMatrix = mainDB.BPs.FirstOrDefault(s => s.Name == access[0].БП).AccessMatrix;
                    string userId = (dataGrid1.SelectedItem as UserDTO).Логин;
                    foreach (var a in access)
                    {
                        accessMatrix.Matrix[userId][a.Этап] = a.Доступ;
                    }
                    var bp = mainDB.BPs.FirstOrDefault(s => s.Name == access[0].БП);
                    bp.AccessMatrix = null;
                    mainDB.SaveChanges();
                    bp = mainDB.BPs.FirstOrDefault(s => s.Name == access[0].БП);
                    bp.AccessMatrix = accessMatrix;
                    mainDB.SaveChanges();
                    ///
                }
                
            }
        }
    }
}
